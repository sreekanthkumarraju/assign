{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreepriya\\\\Desktop\\\\Fullstackdeveloper\\\\student-teacher-management-formik\\\\src\\\\components\\\\Student Management\\\\CreateStudent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = \"required\";\n  } else if (values.firstName.length > 20) {\n    errors.firstName = 'Must be 20 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Reaquired';\n  } else if (values.lastName.length > 25) {\n    errors.lastName = 'Must be 25 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^ [A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2-4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nexport default function CreateStudent() {\n  _s();\n\n  const options = [{\n    label: \"...Choose a course...\",\n    value: \"choose\"\n  }, {\n    label: \"Information Technology\",\n    value: \"information technology\"\n  }, {\n    label: \"Computer Science Engineering\",\n    value: \"computer science engineering\"\n  }, {\n    label: \"Computer Science and System Engineering\",\n    value: \"computer science and system engineering\"\n  }, {\n    label: \"Mechanical Engineering\",\n    value: \"mechanical engineering\"\n  }, {\n    label: \"Civil Engineering\",\n    value: \"civil engineering\"\n  }];\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      course: ''\n    },\n    validate,\n    onSubmit: values => {\n      console.log(formik.values);\n      alert(JSON.stringify(formik.values));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"create-firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"firstName\",\n        name: \"firstName\",\n        value: formik.values.firstName,\n        onBlur: formik.handleBlur,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 43\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"create-lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"lastName\",\n        name: \"lastName\",\n        value: formik.values.lastName,\n        onBlur: formik.handleBlur,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 44\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"create-email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        name: \"email\",\n        value: formik.values.email,\n        onBlur: formik.handleBlur,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 18\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"courses\",\n        children: \"Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"course\",\n        id: \"course\",\n        value: formik.values.option,\n        onChange: formik.handleChange,\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 22\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-danger\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateStudent, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = CreateStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateStudent\");","map":{"version":3,"names":["React","useFormik","validate","values","errors","firstName","length","lastName","email","test","CreateStudent","options","label","value","formik","initialValues","course","onSubmit","console","log","alert","JSON","stringify","handleSubmit","handleBlur","handleChange","option","map"],"sources":["C:/Users/sreepriya/Desktop/Fullstackdeveloper/student-teacher-management-formik/src/components/Student Management/CreateStudent.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFormik } from 'formik';\r\n\r\n\r\nconst validate=values =>{\r\n    const errors={};\r\n     \r\n     if(!values.firstName)\r\n       {\r\n           errors.firstName=\"required\"\r\n       }\r\n    else if(values.firstName.length>20)\r\n       {\r\n          errors.firstName='Must be 20 characters or less'\r\n       }\r\n\r\n       if(!values.lastName)\r\n        {\r\n            errors.lastName='Reaquired'\r\n        }\r\n        else if(values.lastName.length>25)\r\n         {\r\n             errors.lastName='Must be 25 characters or less'\r\n         }\r\n\r\n\r\n         if(!values.email){\r\n             errors.email=\"Required\"\r\n         }\r\n         else if(!/^ [A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2-4}$/i.test(values.email))\r\n         {\r\n             errors.email='Invalid email address'\r\n         }\r\n\r\n         return errors;\r\n}\r\n\r\nexport default function CreateStudent(){\r\n\r\n    const options=[\r\n        {\r\n            label:\"...Choose a course...\",\r\n            value:\"choose\"\r\n        },\r\n       \r\n        {\r\n            label:\"Information Technology\",\r\n            value:\"information technology\"\r\n        },\r\n        {\r\n            label:\"Computer Science Engineering\",\r\n            value:\"computer science engineering\"\r\n        },\r\n        {\r\n            label:\"Computer Science and System Engineering\",\r\n            value:\"computer science and system engineering\"\r\n        },\r\n        {\r\n            label:\"Mechanical Engineering\",\r\n            value:\"mechanical engineering\"\r\n        },\r\n        {\r\n            label:\"Civil Engineering\",\r\n            value:\"civil engineering\"\r\n        },\r\n\r\n    ]\r\n\r\n    const formik=useFormik({\r\n         \r\n          initialValues:{\r\n              firstName:'',\r\n              lastName:'',\r\n              email:'',\r\n              course:''\r\n          },\r\n          validate,\r\n          onSubmit:values=>{\r\n              console.log(formik.values)\r\n              alert(JSON.stringify(formik.values))\r\n\r\n          }\r\n    })\r\n\r\n    return(\r\n        \r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label id='create-firstName'>First Name</label>\r\n                <input type='text' id='firstName' name=\"firstName\"  value={formik.values.firstName}  onBlur={formik.handleBlur} onChange={formik.handleChange}></input>\r\n                {formik.errors.firstName ?<div>{formik.errors.firstName}</div>:null}\r\n                \r\n                <label id='create-lastName'>Last Name</label>\r\n                <input type='text' id='lastName' name='lastName'  value={formik.values.lastName}  onBlur={formik.handleBlur} onChange={formik.handleChange}></input>\r\n                 {formik.errors.lastName ? <div>{formik.errors.lastName}</div> : null}\r\n                 \r\n                 <label id='create-email'>Email</label>\r\n                 <input type='text' id='email' name='email'  value={formik.values.email}  onBlur={formik.handleBlur} onChange={formik.handleChange}></input>\r\n                 {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n\r\n                <label id='courses'>Courses</label>\r\n               \r\n                 <select name='course' id='course' value={formik.values.option} onChange={formik.handleChange}>\r\n                  \r\n                   {options.map((option) => (\r\n                     <option value={option.value}>{option.label}</option>\r\n                   ))}\r\n                    \r\n                </select>\r\n\r\n              \r\n                \r\n                 <button type='submit'  className=\"bg-danger\">Create</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}